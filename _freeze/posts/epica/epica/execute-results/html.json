{
  "hash": "ca381a819aeaa17dcd81ea56f1b255ee",
  "result": {
    "markdown": "---\ntitle: \"Twenty years of Epica: The Empirics\"\nauthor: \"Daniel SÃ¡nchez\"\ndate: \"2023-06-17\"\ndescription: \"As a (late) tribute to Epica's *The Phantom Agony* twentieth birthday, I access the Genius, Last.fm and Spotify APIs with R to analyse the Dutch band's streams, musical features and lyrics. Cover picture by [Diego Eivar](https://www.facebook.com/bubueivar).\"\ncategories: [english, music, text analysis, data viz, epica, metal]\ncsl: ../../econometrics.csl\ndraft: true\nimage: cover.png\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\n    echo: true\n    include: true\nbibliography: references.bib\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show the code\"\n    code-overflow: wrap\n---\n\n::: {.cell}\n\n:::\n\n\nOn June 5th, 2003, dutch-based symphonic metal band [Epica](https://www.epica.nl/home) released their first full-length album, [*The Phantom Agony*](https://open.spotify.com/album/5qBmY4zyWEYP8bNJsq9Xjf?si=fJdSpTbvT4STnJJf3FweTw), the first of eight albums on the band's successful trajectory in the metal scene. Twenty years after, Epica is alive and kicking after having released a full-length album in 2021, [*Omega*](https://open.spotify.com/album/4Hb5cbP4Z9H9G1HavAra4q?si=9oHGzf-CRferS5kk9cxbsA), an EP in 2022, [*The Alchemy Project*](https://open.spotify.com/album/5So2cOEFCkkxZ7o5DAvpPH?si=5NCuejwaT3CIfHz1qzAG-w), and were headliners of Metallica's M72 2023 World Tour concerts in Europe. Epica's lengthy trajectory and activeness make the band a great case study about death/symphonic metal has adapted to the modern stream-based music industry. In this post, yours truly uses API data from Genius, Last.fm and Spotify to look at the empirics behind Epica's discography, with an emphasis on *The Phantom Agony*.\n\n## What makes Epica different?\n\nEpica is *unique*. Though that is something that any die-hard fan will tell you about their favourite band, Epica has several differencing factors which make them stand out in the genre. The band combines gutural growls from death metal with soprano vocals and string orchestras. This notable musical style was first heard in *The Phantom Agony*, after Dutch guitarist and singer Mark Jansen left After Forever and founded Epica with dutch singer Simone Simons.\n\nTo look at how Epica has constructed its musical features, we can use Spotify-calculated audio features, which rank songs based on energy, danceability, valence, among others [@duman2022]. The Spotify API can be accessed with R through the [*spotifyr*](https://www.rcharlie.com/spotifyr/) package, but it needs users to create a [Spotify Developer account](https://developer.spotify.com/) and request a Client ID and a Client Secret. For a comprehensive tutorial on how to do this, see this [tutorial](https://msmith7161.github.io/what-is-speechiness/). \n\nOnce having acquired the credentials, set them up as system environment variables through a call to `Sys.setenv(SPOTIFY_CLIENT_ID = 'something')` and `Sys.setenv(SPOTIFY_CLIENT_SECRET= 'something')`. Having these as system variables make the code less clunky and faster. Further, since we're going to access data from Epica, it's useful to set up the Spotify identificator for the band, which can be found in the Spotify [artist's link](https://open.spotify.com/artist/5HA5aLY3jJV7eimXWkRBBp?si=7BH2xg27Q9-gjo7UC25-FA), after the `artist/` and before the interrogation sign `?`. With that, we can acquire all albums from Epica available in Spotify, as well as audio metrics per track. The data requires quite a bit of preparation for *ggplot2* graphics, but trust me, it's worth it. Below, I acquire track-level audio metrics and then group at the album level^[I only consider Epica's eight full-length releases: *The Phantom Agony (2003)*, *Consign To Oblivion (2005)*, *The Divine Conspiracy (2007)*, *Design Your Universe (2009)*, *Requiem for the Indifferent (2012)*, *The Quantum Enigma (2014)*, *The Holographic Principle (2016)*, *Omega (2021)* and their two EPs, *The Solace System (2017)* and *The Alchemy Project (2022)*. I leave out the *Attack on Titan* cover album (which does not make *Crimson Bow and Arrow* any less epic), singles and live albums.] by taking averages of all metrics. \n\n\n:::{.callout-tip}\nYou can display the code which generated the graphs using the down arrow in the code blocks. \n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Setup the access token\n\naccess_token <- get_spotify_access_token(client_id = Sys.getenv('SPOTIFY_CLIENT_ID'),\n                                         client_secret = Sys.getenv('SPOTIFY_CLIENT_SECRET'))\n\n\n# Define an album/EPs vector, a year vector, to use later as well as the artist id\n\nepica_spotify_id <- '5HA5aLY3jJV7eimXWkRBBp'\n\nepica_releases_year <- \n  data.frame(\n    release_spotify = c(\"The Phantom Agony (Expanded Edition)\", \"Consign To Oblivion (Expanded Edition)\", \n                        \"The Divine Conspiracy\", \"Design Your Universe\", \"Requiem for the Indifferent\", \n                        \"The Quantum Enigma\", \"The Holographic Principle\",\"The Solace System\", \n                        \"Omega\", \"The Alchemy Project\"),\n    release_name =  c(\"The Phantom Agony\", \"Consign To Oblivion\", \"The Divine Conspiracy\", \"Design Your Universe\", \n                      \"Requiem for the Indifferent\", \"The Quantum Enigma\", \"The Holographic Principle\",\n                      \"The Solace System\", \"Omega\", \"The Alchemy Project\"),\n    release_year = c(2003, 2005, 2007, 2009, 2012, 2014, 2016, 2017, 2021, 2022)\n)\n\n# Get metrics at the track level and filter for the selection of releases I chose\n\nepica_track_metrics <-\n  get_artist_audio_features(epica_spotify_id, include_groups = c('album', 'single')) %>%\n  select(track_name,\n         album_name,\n         album_id,\n         energy,\n         loudness,\n         speechiness,\n         acousticness,\n         instrumentalness,\n         liveness,\n         valence,\n         tempo) %>% \n  filter(album_name %in% epica_releases_year$release_spotify) \n\n# Group at the album level, reshape to long form, then plot\n\nepica_album_metrics <-\n  epica_track_metrics %>% \n  group_by(album_name) %>% \n  summarise_if(is.numeric, mean) %>% \n  left_join(epica_releases_year, by = c('album_name' = 'release_spotify')) %>% \n  arrange(desc(release_year)) %>% \n  select(-album_name) %>% \n  mutate(loudness = abs(loudness),\n         release_name_year = paste(release_name,' ', '(', release_year, ')', sep = '')) %>% \n  relocate(release_name, release_name_year, release_year) %>% \n  gather(metric, value, energy, loudness, speechiness, acousticness, instrumentalness, liveness, valence, tempo)\n\n# Create an ordering for my metrics\n\norderings <- data.frame(\n  metric = c('energy', 'valence', 'instrumentalness', 'speechiness'),\n  order = c(4,3,2,1)\n)\n\n# Graph\n\nepica_album_metrics %>%\n  filter(metric %in% c('energy', 'valence', 'instrumentalness', 'speechiness')) %>% \n  left_join(orderings, by = 'metric') %>% \n  mutate(metric = factor(str_to_sentence(metric))) %>% \n  ggplot(aes(reorder(release_name_year, release_year), value, fill = reorder(metric, order))) +\n  geom_col(width = 0.7, position = position_dodge(width = 0.7)) +\n  coord_flip() +\n  labs(title = 'The Sound of Epica 2000-2023',\n    subtitle = \"Spotify audio metrics for all Epica albums & EPs \\n\",\n     y = '',\n     x = '',\n     caption = str_wrap('Note: Spotify provides audio metrics at the track level. The horizontal axis shows the average value of the metric, grouping by band release. Data obtained from the Spotify API through the spotifyr package.', 130),\n     fill = 'Audio Metric') +\n  theme_daniel +\n  theme(axis.text.x = element_blank(),\n        axis.text.y = element_text(colour = 'gray'),\n        legend.position = c(0.12, 1.05), \n        legend.margin = margin(0),\n        legend.direction = 'horizontal') \n```\n\n::: {.cell-output-display}\n![](epica_files/figure-html/albums-tracks-spotify-1.png){width=1152}\n:::\n:::\n\nEpica's characteristic sound, which meddles the armonious verses by the female lead with violent male growls was born in a single, *Cry for the Moon* released 2003 and also included in their first album. *Cry for the Moon* remains as one of Epica's most important tracks, as it set the scene for the what was to come later. Curiously, this first album is not the most instrumental of them all, ranking fourth in terms of instrumentalness. The most instrumental release by Epica is actually *Consign to Oblivion* (2005), often considered as the band's *magnum opus*, followed by 2016's *The Holographic Principle*. The data also shows an apparent trade-off between energy and instrumentality, an intuitive idea which is only challenged by the unique *Design Your Universe* (2009) with both high instrumentality and energy, which in my view marked the difference between the modern and the *classical* Epica. This last release contained the unforgettable *Unleashed*, probably Epica's most mainstream track so far. \n\nSomewhat of a pattern can be found in the band's last two releases: the instrumentality fades, apparently in favour of more energy. Is this the way that Epica makes its way into today's hyper competitive and commercial music industry? A question like this has no clear answer (and perhaps does not deserve one), but the strategy here might be one of making a subtle impact. With newer releases which are *friendler* to the unexperienced listeners, Epica subtly enters the scene to the create an *obsessive devotion* after the innocent streamer turns to mindless fanatic after listening to the band's more loyal records of old. \n\n",
    "supporting": [
      "epica_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}